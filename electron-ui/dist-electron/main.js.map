{"version":3,"file":"main.js","sources":["../electron/main.ts"],"sourcesContent":["import { app, BrowserWindow, ipcMain } from 'electron'\r\nimport { join } from 'path'\r\n\r\nlet mainWindow: BrowserWindow | null = null;\r\n\r\nfunction createWindow() {\r\n  // 获取正确的路径\r\n  const isDev = process.env.NODE_ENV === 'development';\r\n  const preloadPath = isDev \r\n    ? join(__dirname, 'preload.js')\r\n    : join(__dirname, 'preload.js');\r\n\r\n  console.log('Preload path:', preloadPath);\r\n  console.log('__dirname:', __dirname);\r\n  console.log('isDev:', isDev);\r\n\r\n  mainWindow = new BrowserWindow({\r\n    width: 1200,\r\n    height: 800,\r\n    icon: join(__dirname, '../public/AUTO_MAA.ico'), // 设置应用图标\r\n    autoHideMenuBar: true, // 隐藏菜单栏（file、edit等）\r\n    webPreferences: {\r\n      nodeIntegration: false,\r\n      contextIsolation: true,\r\n      enableRemoteModule: false,\r\n      webSecurity: true,\r\n      preload: preloadPath\r\n    }\r\n  })\r\n\r\n  // 开发模式加载 Vite 服务，生产加载本地 index.html\r\n  const devUrl = process.env.VITE_DEV_SERVER_URL\r\n  if (devUrl) {\r\n    console.log('Loading dev URL:', devUrl);\r\n    mainWindow.loadURL(devUrl)\r\n  } else {\r\n    // 简化路径逻辑\r\n    const indexPath = join(__dirname, '../dist/index.html');\r\n    console.log('Loading file:', indexPath);\r\n    console.log('__dirname:', __dirname);\r\n    console.log('Current working directory:', process.cwd());\r\n    console.log('App path:', app.getAppPath());\r\n    \r\n    mainWindow.loadFile(indexPath).catch((error) => {\r\n      console.error('Failed to load index.html:', error);\r\n      // 如果加载失败，尝试备用路径\r\n      const backupPath = join(app.getAppPath(), 'dist/index.html');\r\n      console.log('Trying backup path:', backupPath);\r\n      mainWindow?.loadFile(backupPath);\r\n    });\r\n  }\r\n\r\n  // 添加错误处理\r\n  mainWindow.webContents.on('did-fail-load', (event, errorCode, errorDescription) => {\r\n    console.error('Failed to load:', errorCode, errorDescription);\r\n  });\r\n\r\n  // 在生产环境中也打开开发者工具来调试\r\n  if (!isDev) {\r\n    mainWindow.webContents.openDevTools();\r\n  }\r\n\r\n  // 窗口关闭时清空引用\r\n  mainWindow.on('closed', () => {\r\n    mainWindow = null;\r\n  });\r\n}\r\n\r\n// IPC处理程序\r\nipcMain.handle('open-dev-tools', () => {\r\n  if (mainWindow) {\r\n    mainWindow.webContents.openDevTools();\r\n  }\r\n});\r\n\r\nipcMain.handle('select-directory', async () => {\r\n  if (mainWindow) {\r\n    const { dialog } = require('electron');\r\n    const result = await dialog.showOpenDialog(mainWindow, {\r\n      properties: ['openDirectory'],\r\n      title: '选择MAA目录',\r\n      buttonLabel: '选择'\r\n    });\r\n    \r\n    if (!result.canceled && result.filePaths.length > 0) {\r\n      return result.filePaths[0];\r\n    }\r\n  }\r\n  return null;\r\n});\r\n\r\nipcMain.handle('select-file', async (event, filters = []) => {\r\n  if (mainWindow) {\r\n    const { dialog } = require('electron');\r\n    const result = await dialog.showOpenDialog(mainWindow, {\r\n      properties: ['openFile'],\r\n      title: '选择文件',\r\n      buttonLabel: '选择',\r\n      filters: filters.length > 0 ? filters : [\r\n        { name: 'All Files', extensions: ['*'] }\r\n      ]\r\n    });\r\n    \r\n    if (!result.canceled && result.filePaths.length > 0) {\r\n      return result.filePaths[0];\r\n    }\r\n  }\r\n  return null;\r\n});\r\n\r\napp.whenReady().then(createWindow)\r\n\r\napp.on('window-all-closed', () => {\r\n  if (process.platform !== 'darwin') app.quit()\r\n})\r\n"],"names":["join","BrowserWindow","app","ipcMain"],"mappings":"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"}